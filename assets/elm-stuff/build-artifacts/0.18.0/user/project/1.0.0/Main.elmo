var _user$project$Main$loginEncoded = function (data) {
	var list = {
		ctor: '::',
		_0: {
			ctor: '_Tuple2',
			_0: 'username',
			_1: _elm_lang$core$Json_Encode$string(data.username)
		},
		_1: {
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'password',
				_1: _elm_lang$core$Json_Encode$string(data.password)
			},
			_1: {ctor: '[]'}
		}
	};
	return _elm_lang$core$Json_Encode$object(list);
};
var _user$project$Main$decodeLoginUrl = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'jwt',
		_1: {ctor: '[]'}
	},
	_elm_lang$core$Json_Decode$string);
var _user$project$Main$getErrors = function (model) {
	return {
		username: _elm_lang$core$Native_Utils.eq(model.username, '') ? 'Please enter a username!' : '',
		password: _elm_lang$core$Native_Utils.eq(model.password, '') ? 'Please enter a password!' : ''
	};
};
var _user$project$Main$model = {
	username: '',
	password: '',
	user: _elm_lang$core$Maybe$Nothing,
	storageResult: '',
	validJwtError: '',
	formErrors: {username: '', password: ''}
};
var _user$project$Main$FormErrors = F2(
	function (a, b) {
		return {username: a, password: b};
	});
var _user$project$Main$Model = F6(
	function (a, b, c, d, e, f) {
		return {username: a, password: b, user: c, storageResult: d, validJwtError: e, formErrors: f};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A6(
		_user$project$Main$Model,
		'',
		'',
		_elm_lang$core$Maybe$Nothing,
		'',
		'',
		{username: '', password: ''}),
	_1: _user$project$Frequency_Ports$queryStorage('jwt')
};
var _user$project$Main$StorageResult = function (a) {
	return {ctor: 'StorageResult', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return _user$project$Frequency_Ports$storageResult(_user$project$Main$StorageResult);
};
var _user$project$Main$JwtValidResult = function (a) {
	return {ctor: 'JwtValidResult', _0: a};
};
var _user$project$Main$LoginResult = function (a) {
	return {ctor: 'LoginResult', _0: a};
};
var _user$project$Main$postLogin = function (model) {
	var body = _elm_lang$http$Http$jsonBody(
		_user$project$Main$loginEncoded(model));
	var url = '/api/token';
	var request = A3(_elm_lang$http$Http$post, url, body, _user$project$Main$decodeLoginUrl);
	return A2(_elm_lang$http$Http$send, _user$project$Main$LoginResult, request);
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'ChangeUsername':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{username: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ChangePassword':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{password: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Login':
				var hasErrors = (_elm_lang$core$Native_Utils.eq(model.username, '') || _elm_lang$core$Native_Utils.eq(model.password, '')) ? true : false;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							formErrors: _user$project$Main$getErrors(model)
						}),
					_1: hasErrors ? _elm_lang$core$Platform_Cmd$none : _user$project$Main$postLogin(model)
				};
			case 'LoginResult':
				if (_p0._0.ctor === 'Ok') {
					var _p1 = _p0._0._0;
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{storageResult: _p1, password: '', username: ''}),
						_1: _user$project$Frequency_Ports$addToStorage(
							{jwt: _p1})
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'JwtValidResult':
				if (_p0._0.ctor === 'Ok') {
					var _p2 = _p0._0._0;
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								username: _p2.username,
								user: _elm_lang$core$Maybe$Just(_p2)
							}),
						_1: _user$project$Frequency_Ports$navigateTo('/')
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{validJwtError: 'Unable to find a valid user!'}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			default:
				var _p3 = _p0._0;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{storageResult: _p3}),
					_1: A2(_user$project$Frequency_Common$getJwtValid, _p3, _user$project$Main$JwtValidResult)
				};
		}
	});
var _user$project$Main$ChangePassword = function (a) {
	return {ctor: 'ChangePassword', _0: a};
};
var _user$project$Main$ChangeUsername = function (a) {
	return {ctor: 'ChangeUsername', _0: a};
};
var _user$project$Main$Login = {ctor: 'Login'};
var _user$project$Main$view = function (model) {
	var _p4 = model.user;
	if (_p4.ctor === 'Nothing') {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('container'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('onl_login'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$h3,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('onl_authTitle'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Login Or '),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$a,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$href('/register'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Register'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('row onl_row-sm-offset-3 onl_socialButtons'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('col-sm-6'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$a,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$href('/auth/google'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$class('btn btn-lg btn-block onl_btn-google-plus'),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$title('Google'),
															_1: {ctor: '[]'}
														}
													}
												},
												{
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$i,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$class('fa fa-google-plus fa-2x'),
															_1: {ctor: '[]'}
														},
														{ctor: '[]'}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$span,
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$class('hidden-xs'),
																_1: {ctor: '[]'}
															},
															{ctor: '[]'}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('row onl_row-sm-offset-3 onl_loginOr'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('col-xs-12 col-sm-6'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$hr,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$class('onl_hrOr'),
														_1: {ctor: '[]'}
													},
													{ctor: '[]'}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$span,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$class('onl_spanOr'),
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('or'),
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('row onl_row-sm-offset-3'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$div,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('col-xs-12 col-sm-6'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$form,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$class('onl_loginForm'),
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$div,
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$class('input-group'),
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: A2(
																		_elm_lang$html$Html$span,
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html_Attributes$class('input-group-addon'),
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: A2(
																				_elm_lang$html$Html$span,
																				{
																					ctor: '::',
																					_0: _elm_lang$html$Html_Attributes$class('glyphicon glyphicon-user'),
																					_1: {ctor: '[]'}
																				},
																				{ctor: '[]'}),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_elm_lang$html$Html$input,
																			{
																				ctor: '::',
																				_0: _elm_lang$html$Html_Attributes$placeholder('Username'),
																				_1: {
																					ctor: '::',
																					_0: _elm_lang$html$Html_Attributes$class('form-control'),
																					_1: {
																						ctor: '::',
																						_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$ChangeUsername),
																						_1: {
																							ctor: '::',
																							_0: _elm_lang$html$Html_Attributes$value(model.username),
																							_1: {ctor: '[]'}
																						}
																					}
																				}
																			},
																			{ctor: '[]'}),
																		_1: {ctor: '[]'}
																	}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_elm_lang$html$Html$span,
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$class('help-block'),
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text(model.formErrors.username),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_elm_lang$html$Html$div,
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html_Attributes$class('input-group'),
																			_1: {ctor: '[]'}
																		},
																		{
																			ctor: '::',
																			_0: A2(
																				_elm_lang$html$Html$span,
																				{
																					ctor: '::',
																					_0: _elm_lang$html$Html_Attributes$class('input-group-addon'),
																					_1: {ctor: '[]'}
																				},
																				{
																					ctor: '::',
																					_0: A2(
																						_elm_lang$html$Html$span,
																						{
																							ctor: '::',
																							_0: _elm_lang$html$Html_Attributes$class('glyphicon glyphicon-lock'),
																							_1: {ctor: '[]'}
																						},
																						{ctor: '[]'}),
																					_1: {ctor: '[]'}
																				}),
																			_1: {
																				ctor: '::',
																				_0: A2(
																					_elm_lang$html$Html$input,
																					{
																						ctor: '::',
																						_0: _elm_lang$html$Html_Attributes$placeholder('Password'),
																						_1: {
																							ctor: '::',
																							_0: _elm_lang$html$Html_Attributes$class('form-control'),
																							_1: {
																								ctor: '::',
																								_0: _elm_lang$html$Html_Attributes$type_('password'),
																								_1: {
																									ctor: '::',
																									_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$ChangePassword),
																									_1: {ctor: '[]'}
																								}
																							}
																						}
																					},
																					{ctor: '[]'}),
																				_1: {ctor: '[]'}
																			}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_elm_lang$html$Html$span,
																			{
																				ctor: '::',
																				_0: _elm_lang$html$Html_Attributes$class('help-block'),
																				_1: {ctor: '[]'}
																			},
																			{
																				ctor: '::',
																				_0: _elm_lang$html$Html$text(model.formErrors.password),
																				_1: {ctor: '[]'}
																			}),
																		_1: {
																			ctor: '::',
																			_0: A2(
																				_elm_lang$html$Html$button,
																				{
																					ctor: '::',
																					_0: _elm_lang$html$Html_Attributes$class('btn btn-lg btn-primary btn-block'),
																					_1: {
																						ctor: '::',
																						_0: _elm_lang$html$Html_Attributes$type_('submit'),
																						_1: {
																							ctor: '::',
																							_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Login),
																							_1: {ctor: '[]'}
																						}
																					}
																				},
																				{
																					ctor: '::',
																					_0: A2(
																						_elm_lang$html$Html$i,
																						{
																							ctor: '::',
																							_0: _elm_lang$html$Html_Attributes$class('fa fa-sign-in'),
																							_1: {ctor: '[]'}
																						},
																						{ctor: '[]'}),
																					_1: {
																						ctor: '::',
																						_0: _elm_lang$html$Html$text(' Login'),
																						_1: {ctor: '[]'}
																					}
																				}),
																			_1: {ctor: '[]'}
																		}
																	}
																}
															}
														}),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}
						}
					}),
				_1: {ctor: '[]'}
			});
	} else {
		var _p5 = _p4._0;
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$span,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(
								_elm_lang$core$Basics_ops['++'],
								'Welcome ',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_p5.first_name,
									A2(_elm_lang$core$Basics_ops['++'], ' ', _p5.last_name)))),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			});
	}
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
